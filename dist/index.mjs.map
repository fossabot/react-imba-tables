{"version":3,"file":"index.mjs","sources":["../src/components/ImbaTablePagination.tsx","../src/components/ImbaTableSearchField.tsx","../src/components/ImbaTableColumnHeader.tsx","../src/components/ImbaTable.tsx","../src/components/ImbaTableColumn.tsx"],"sourcesContent":["import React from 'react'\n\ninterface Props {\n    currentPage: number;\n    pages: number;\n    onPageSelected: (page: number) => void;\n    onPrevious: () => void;\n    onNext: () => void;\n}\n\nclass ImbaTablePagination extends React.Component<Props> {\n\n    renderPageButtons() {\n        return Array.from(Array(this.props.pages).keys()).map((pageNumber, index) => {\n\n            const isActive = (pageNumber+1 === this.props.currentPage ? ' active' : '');\n\n            return (\n                <li key={index} className={`page-item${isActive}`} onClick={() => { this.props.onPageSelected(pageNumber+1); }}>\n                    <a className=\"page-link\" href=\"#\">{pageNumber+1}</a>\n                </li>\n            );\n        })\n    }\n\n    render() {\n\n        const prevDisabled = (this.props.currentPage <= 1 ? ' disabled' : '');\n        const nextDisabled = (this.props.currentPage >= this.props.pages ? ' disabled' : '');\n\n        return (\n            <div>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination\">\n                        <li className={`page-item${prevDisabled}`} onClick={() => { this.props.onPrevious(); }}>\n                            <a className=\"page-link\" href=\"#\">Previous</a>\n                        </li>\n                        {this.renderPageButtons()}\n                        <li className={`page-item${nextDisabled}`} onClick={() => { this.props.onNext(); }}>\n                            <a className=\"page-link\" href=\"#\">Next</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        );\n    }\n}\n\nexport default ImbaTablePagination;\n","import React from 'react'\n\ninterface Props {\n    onChange: (text: string) => void;\n}\n\nclass ImbaTableSearchField extends React.Component<Props> {\n\n    render() {\n\n        return (\n            <div>\n                <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Search...\"\n                    onChange={(event) => { this.props.onChange(event.target.value); }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ImbaTableSearchField;\n","import React from 'react'\n\ninterface Props {\n    id: number;\n    label: string;\n    sortable?: boolean;\n    sortColId: number;\n    sortAsc: boolean;\n    onClick: (sortColId: number, sortAsc: boolean) => void;\n}\n\nconst ImbaTableColumnHeader: React.FunctionComponent<Props> = ({id, label, sortable, sortColId, sortAsc, onClick}) => {\n\n    const clickCallback = () => {\n        if(sortColId === id) {\n            onClick(id, !sortAsc);\n        } else {\n            onClick(id, true);\n        }\n    };\n\n    if(sortable === undefined || sortable) {\n        if(sortColId === id) {\n            if(sortAsc) {\n                return <th onClick={clickCallback} scope=\"col\" className=\"sortable asc\">{label}</th>\n            }\n            return <th onClick={clickCallback} scope=\"col\" className=\"sortable desc\">{label}</th>\n        }\n        return <th onClick={clickCallback} scope=\"col\" className=\"sortable\">{label}</th>\n    }\n    return <th scope=\"col\">{label}</th>\n};\n\nexport default ImbaTableColumnHeader;\n","import React, {ReactElement} from 'react'\nimport ImbaTablePagination from \"./ImbaTablePagination\";\nimport ImbaTableSearchField from \"./ImbaTableSearchField\";\nimport ImbaTableColumnHeader from \"./ImbaTableColumnHeader\";\n\ninterface DataProps {\n    id: number;\n}\n\ninterface State {\n    page: number;\n    rowsPerPage: number;\n    searchText: string;\n    sortColId: number;\n    sortAsc: boolean;\n}\n\ninterface Props {\n    data: DataProps[];\n    children: ReactElement[];\n}\n\nclass ImbaTable extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            page: 1,\n            rowsPerPage: 5,\n            searchText: '',\n            sortColId: 1,\n            sortAsc: true,\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<State>, snapshot?: any): void {\n        if(prevProps.data.length !== this.props.data.length) {\n            this.setState({page: 1});\n        }\n    }\n\n    render() {\n\n        const {children, data} = this.props;\n\n        const cols: ReactElement[] = children.filter((child: any) => {\n            return !(!child.props || !child.props.field || !child.props.label);\n        });\n\n        // Filtering\n        let filteredData = data;\n        if(this.state.searchText.length > 0) {\n            filteredData = data.filter((row: any) => {\n                return Object.keys(row).find((key: string) => {\n                    const value = row[key].toString();\n                    return (value.toLowerCase().indexOf(this.state.searchText.toLocaleLowerCase()) !== -1);\n                })\n            });\n        }\n\n        // Sorting\n        const sortedData = filteredData.sort((row1: any, row2: any) => {\n            const sortCol = cols.find((col) => {\n                return col.props.id === this.state.sortColId;\n            });\n            if(!sortCol) {\n                return 0;\n            }\n            const sortField: string = sortCol.props.field;\n            if(row1[sortField] < row2[sortField]) {\n                return (this.state.sortAsc ? -1 : 1);\n            } else if(row1[sortField] > row2[sortField]) {\n                return (this.state.sortAsc ? 1 : -1);\n            }\n            return 0;\n        });\n\n        // Paging\n        const pages = Math.ceil(sortedData.length / this.state.rowsPerPage);\n        const startIndex = (this.state.page-1) * this.state.rowsPerPage;\n        let endIndex = startIndex + this.state.rowsPerPage;\n        if (endIndex > data.length) {\n            endIndex = data.length;\n        }\n        const pagedData = sortedData.slice(startIndex, endIndex);\n\n        return (\n            <div className=\"react-imba-table\">\n                <ImbaTableSearchField\n                    onChange={ (searchText: string) => {\n                        this.setState({searchText: searchText, page: 1});\n                    }}\n                />\n\n                <table className=\"table table-striped\">\n                    <thead>\n                    <tr>\n                        {cols.map((col: ReactElement) => {\n                            return (\n                                <ImbaTableColumnHeader\n                                    id={col.props.id}\n                                    key={col.props.id}\n                                    label={col.props.label}\n                                    sortable={col.props.sortable}\n                                    sortColId={this.state.sortColId}\n                                    sortAsc={this.state.sortAsc}\n                                    onClick={(sortColId: number, sortAsc: boolean) => {\n                                        this.setState({sortColId: col.props.id, sortAsc: sortAsc})\n                                    }}\n                                />\n                            );\n                        })}\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {pagedData.map((row: any) => <tr key={row.id}>\n                            {cols.map((col: ReactElement) => <td key={col.props.id}>{row[col.props.field]}</td>)}\n                        </tr>)}\n                    </tbody>\n                </table>\n\n                <ImbaTablePagination\n                    pages={pages}\n                    currentPage={this.state.page}\n                    onPageSelected={(page: number) => {\n                        this.setState({page: page})\n                    }}\n                    onPrevious={() => {\n                        if(this.state.page > 1) {\n                            this.setState({page: this.state.page-1})\n                        }\n                    }}\n                    onNext={() => {\n                        if(this.state.page < pages) {\n                            this.setState({page: this.state.page+1})\n                        }\n                    }}\n                />\n\n                Showing Page {this.state.page} of {pages}\n            </div>\n        );\n    }\n}\n\nexport default ImbaTable;\n","import React from 'react'\n\ninterface Props {\n    id: number;\n    field: string;\n    label: string;\n    sortable?: boolean;\n}\n\nclass ImbaTableColumn extends React.Component<Props> {\n\n    render() {\n        return <div>col</div>\n    }\n}\n\nexport default ImbaTableColumn;\n"],"names":["ImbaTablePagination","renderPageButtons","Array","from","this","props","pages","keys","map","pageNumber","index","React","key","className","currentPage","onClick","onPageSelected","href","render","nextDisabled","onPrevious","onNext","Component","ImbaTableSearchField","type","placeholder","onChange","event","target","value","ImbaTableColumnHeader","ref","clickCallback","id","sortColId","sortAsc","undefined","sortable","scope","ImbaTable","constructor","state","page","rowsPerPage","searchText","componentDidUpdate","prevProps","prevState","snapshot","data","length","setState","cols","filter","child","field","label","filteredData","row","Object","find","toString","toLowerCase","indexOf","toLocaleLowerCase","sortedData","sort","row1","row2","sortCol","col","sortField","Math","ceil","startIndex","endIndex","pagedData","slice","ImbaTableColumn"],"mappings":"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"}