{"version":3,"file":"index.umd.js","sources":["../src/components/ImbaTablePagination.tsx","../src/components/ImbaTableSearchField.tsx","../src/components/ImbaTable.tsx","../src/components/ImbaTableColumn.tsx"],"sourcesContent":["import React from 'react'\n\ninterface Props {\n    currentPage: number;\n    pages: number;\n    onPageSelected: (page: number) => void;\n    onPrevious: () => void;\n    onNext: () => void;\n}\n\nclass ImbaTablePagination extends React.Component<Props> {\n\n    renderPageButtons() {\n        return Array.from(Array(this.props.pages).keys()).map((pageNumber, index) => {\n\n            const isActive = (pageNumber+1 === this.props.currentPage ? ' active' : '');\n\n            return (\n                <li key={index} className={`page-item${isActive}`} onClick={() => { this.props.onPageSelected(pageNumber+1); }}>\n                    <a className=\"page-link\" href=\"#\">{pageNumber+1}</a>\n                </li>\n            );\n        })\n    }\n\n    render() {\n\n        const prevDisabled = (this.props.currentPage <= 1 ? ' disabled' : '');\n        const nextDisabled = (this.props.currentPage >= this.props.pages ? ' disabled' : '');\n\n        return (\n            <div>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination\">\n                        <li className={`page-item${prevDisabled}`} onClick={() => { this.props.onPrevious(); }}>\n                            <a className=\"page-link\" href=\"#\">Previous</a>\n                        </li>\n                        {this.renderPageButtons()}\n                        <li className={`page-item${nextDisabled}`} onClick={() => { this.props.onNext(); }}>\n                            <a className=\"page-link\" href=\"#\">Next</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        );\n    }\n}\n\nexport default ImbaTablePagination;\n","import React from 'react'\n\ninterface Props {\n    onChange: (text: string) => void;\n}\n\nclass ImbaTableSearchField extends React.Component<Props> {\n\n    render() {\n\n        return (\n            <div>\n                <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Search...\"\n                    onChange={(event) => { this.props.onChange(event.target.value); }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ImbaTableSearchField;\n","import React, {ReactElement} from 'react'\nimport ImbaTablePagination from \"./ImbaTablePagination\";\nimport ImbaTableSearchField from \"./ImbaTableSearchField\";\n\ninterface DataProps {\n    id: number;\n}\n\ninterface State {\n    page: number;\n    rowsPerPage: number;\n    searchText: string;\n}\n\ninterface Props {\n    data: DataProps[];\n    children: ReactElement[];\n}\n\nclass ImbaTable extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            page: 1,\n            rowsPerPage: 5,\n            searchText: '',\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<State>, snapshot?: any): void {\n        if(prevProps.data.length !== this.props.data.length) {\n            this.setState({page: 1});\n        }\n    }\n\n    render() {\n\n        const {children, data} = this.props;\n\n        const cols: ReactElement[] = children.filter((child: any) => {\n            return !(!child.props || !child.props.field || !child.props.label);\n        });\n\n        // Filtering\n        let filteredData = data;\n        if(this.state.searchText.length > 0) {\n            filteredData = data.filter((row: any) => {\n                return Object.keys(row).find((key: string) => {\n                    const value = row[key].toString();\n                    return (value.toLowerCase().indexOf(this.state.searchText.toLocaleLowerCase()) !== -1);\n                })\n            });\n        }\n\n        // Paging\n        const pages = Math.ceil(filteredData.length / this.state.rowsPerPage);\n        const startIndex = (this.state.page-1) * this.state.rowsPerPage;\n        let endIndex = startIndex + this.state.rowsPerPage;\n        if (endIndex > data.length) {\n            endIndex = data.length;\n        }\n        const pagedData = filteredData.slice(startIndex, endIndex);\n\n        return (\n            <div>\n                <ImbaTableSearchField\n                    onChange={ (searchText: string) => {\n                        this.setState({searchText: searchText, page: 1});\n                    }}\n                />\n\n                <table className=\"table table-striped\">\n                    <thead>\n                    <tr>\n                        {cols.map((col: ReactElement) => <th scope=\"col\" key={col.props.id}>{col.props.label}</th>)}\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {pagedData.map((row: any) => <tr key={row.id}>\n                            {cols.map((col: ReactElement) => <td key={col.props.id}>{row[col.props.field]}</td>)}\n                        </tr>)}\n                    </tbody>\n                </table>\n\n                <ImbaTablePagination\n                    pages={pages}\n                    currentPage={this.state.page}\n                    onPageSelected={(page: number) => {\n                        this.setState({page: page})\n                    }}\n                    onPrevious={() => {\n                        if(this.state.page > 1) {\n                            this.setState({page: this.state.page-1})\n                        }\n                    }}\n                    onNext={() => {\n                        if(this.state.page < pages) {\n                            this.setState({page: this.state.page+1})\n                        }\n                    }}\n                />\n\n                Showing Page {this.state.page} of {pages}\n            </div>\n        );\n    }\n}\n\nexport default ImbaTable;\n","import React from 'react'\n\ninterface Props {\n    id: number;\n    field: string;\n    label: string;\n}\n\nclass ImbaTableColumn extends React.Component<Props> {\n\n    render() {\n        return <div>col</div>\n    }\n}\n\nexport default ImbaTableColumn;\n"],"names":["ImbaTablePagination","renderPageButtons","Array","from","this","props","pages","keys","map","pageNumber","index","React","key","className","currentPage","onClick","onPageSelected","href","render","nextDisabled","onPrevious","onNext","Component","ImbaTableSearchField","type","placeholder","onChange","event","target","value","ImbaTable","constructor","state","page","rowsPerPage","searchText","componentDidUpdate","prevProps","prevState","snapshot","data","length","setState","cols","filter","child","field","label","filteredData","row","Object","find","toString","toLowerCase","indexOf","toLocaleLowerCase","Math","ceil","startIndex","endIndex","pagedData","slice","col","scope","id"],"mappings":"wNAUA,IAAMA,mJAEFC,+CACWC,MAAMC,KAAKD,MAAME,KAAKC,MAAMC,OAAOC,QAAQC,aAAKC,EAAYC,UAK3DC,sBAAIC,IAAKF,EAAOG,uBAHFJ,EAAW,IAAML,EAAKC,MAAMS,YAAc,UAAY,IAGjBC,qBAAsBV,MAAMW,eAAeP,EAAW,KACrGE,qBAAGE,UAAU,YAAYI,KAAK,KAAKR,EAAW,mBAM9DS,6BAGUC,EAAgBf,KAAKC,MAAMS,aAAeV,KAAKC,MAAMC,MAAQ,YAAc,UAG7EK,2BACIA,oCAAgB,2BACZA,sBAAIE,UAAU,cACVF,sBAAIE,uBAPET,KAAKC,MAAMS,aAAe,EAAI,YAAc,IAOPC,qBAAsBV,MAAMe,eACnET,qBAAGE,UAAU,YAAYI,KAAK,kBAEjCb,KAAKH,oBACNU,sBAAIE,sBAAuBM,EAAgBJ,qBAAsBV,MAAMgB,WACnEV,qBAAGE,UAAU,YAAYI,KAAK,oEA7BlBK,WCJlCC,mJAEFL,oCAGQP,2BACIA,yBACIa,KAAK,QACLX,UAAU,eACVY,YAAY,YACZC,kBAAWC,KAAiBtB,MAAMqB,SAASC,EAAMC,OAAOC,eAVzClB,EAAMW,WCanCQ,cAEFC,WAAY1B,eACFA,QAED2B,MAAQ,CACTC,KAAM,EACNC,YAAa,EACbC,WAAY,oGAIpBC,4BAAmBC,EAA4BC,EAA4BC,GACpEF,EAAUG,KAAKC,SAAWrC,KAAKC,MAAMmC,KAAKC,aACpCC,SAAS,CAACT,KAAM,iBAI7Bf,+BAE6Bd,KAAKC,eAExBsC,aAAgCC,gBAAQC,YAChCA,EAAMxC,QAAUwC,EAAMxC,MAAMyC,QAAUD,EAAMxC,MAAM0C,SAI5DC,EAAeR,EAChBpC,KAAK4B,MAAMG,WAAWM,OAAS,IAC9BO,EAAeR,EAAKI,gBAAQK,UACjBC,OAAO3C,KAAK0C,GAAKE,cAAMvC,UAE0D,IADtEqC,EAAIrC,GAAKwC,WACTC,cAAcC,QAAQlD,EAAK4B,MAAMG,WAAWoB,8BAMhEjD,EAAQkD,KAAKC,KAAKT,EAAaP,OAASrC,KAAK4B,MAAME,aACnDwB,GAActD,KAAK4B,MAAMC,KAAK,GAAK7B,KAAK4B,MAAME,YAChDyB,EAAWD,EAAatD,KAAK4B,MAAME,YACnCyB,EAAWnB,EAAKC,SAChBkB,EAAWnB,EAAKC,YAEdmB,EAAYZ,EAAaa,MAAMH,EAAYC,UAG7ChD,2BACIA,gBAACY,GACGG,kBAAYS,KACHO,SAAS,CAACP,WAAYA,EAAYF,KAAM,OAIrDtB,yBAAOE,UAAU,uBACbF,6BACAA,0BACKgC,EAAKnC,aAAKsD,UAAsBnD,sBAAIoD,MAAM,MAAMnD,IAAKkD,EAAIzD,MAAM2D,IAAKF,EAAIzD,MAAM0C,WAGnFpC,6BACKiD,EAAUpD,aAAKyC,UAAatC,sBAAIC,IAAKqC,EAAIe,IACrCrB,EAAKnC,aAAKsD,UAAsBnD,sBAAIC,IAAKkD,EAAIzD,MAAM2D,IAAKf,EAAIa,EAAIzD,MAAMyC,eAKnFnC,gBAACX,GACGM,MAAOA,EACPQ,YAAaV,KAAK4B,MAAMC,KACxBjB,wBAAiBiB,KACRS,SAAS,CAACT,KAAMA,KAEzBb,sBACOhB,EAAK4B,MAAMC,KAAO,KACZS,SAAS,CAACT,KAAM7B,EAAK4B,MAAMC,KAAK,KAG7CZ,kBACOjB,EAAK4B,MAAMC,KAAO3B,KACZoC,SAAS,CAACT,KAAM7B,EAAK4B,MAAMC,KAAK,uBAKnC7B,KAAK4B,MAAMC,YAAU3B,OArF3BK,EAAMW,8KCT1BJ,yBACWP,sCAHeA,EAAMW"}